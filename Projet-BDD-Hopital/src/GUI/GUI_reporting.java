/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;
import BDD.*;
import java.awt.BorderLayout;
import java.awt.Container;
import javax.sound.midi.MidiDevice.Info;
import static javax.swing.GroupLayout.Alignment.CENTER;
import javax.swing.JDialog;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
/*
import org.jfree.chart.ChartPanel;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.ChartFactory;
*/
/**
 *
 * @author Axel
 */
public class GUI_reporting extends javax.swing.JFrame {

    int action;
 
    /**
     * Creates new form GUI_statistique
     */
    public GUI_reporting() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblReporting = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        btnLancerStat = new javax.swing.JButton();
        panelHistogramme = new javax.swing.JPanel();
        lblPopu = new javax.swing.JLabel();
        btnHistoriqueRequetes = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblReporting.setBackground(new java.awt.Color(153, 153, 153));
        lblReporting.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblReporting.setText("Reporting");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choisir une population", "Nombre d'employé par tranches de salaires", "Nombre d'employé par sevice", "Nombre d'employé par spécialité", "Nombre d'employé par rotation", "Salaire des employés par service", "Salaire des employés par spécialité", "Salaire des employés par métier", "Nombre de malades par service", "Nombre de malades par mutuelle", "Nombre de chambres par service" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        btnLancerStat.setBackground(new java.awt.Color(0, 102, 0));
        btnLancerStat.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnLancerStat.setText("Lancer l'étude");
        btnLancerStat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLancerStatActionPerformed(evt);
            }
        });

        panelHistogramme.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout panelHistogrammeLayout = new javax.swing.GroupLayout(panelHistogramme);
        panelHistogramme.setLayout(panelHistogrammeLayout);
        panelHistogrammeLayout.setHorizontalGroup(
            panelHistogrammeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 490, Short.MAX_VALUE)
        );
        panelHistogrammeLayout.setVerticalGroup(
            panelHistogrammeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        lblPopu.setText("Population à étudier :");

        btnHistoriqueRequetes.setBackground(new java.awt.Color(0, 102, 0));
        btnHistoriqueRequetes.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnHistoriqueRequetes.setText("Historique des requêtes ");
        btnHistoriqueRequetes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHistoriqueRequetesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnHistoriqueRequetes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnLancerStat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelHistogramme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblReporting, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(222, 222, 222))))
                    .addComponent(lblPopu, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblReporting, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(lblPopu, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(120, 120, 120)
                        .addComponent(btnLancerStat, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnHistoriqueRequetes, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelHistogramme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLancerStatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLancerStatActionPerformed
        // TODO add your handling code here:
        
        // faire la requete sql et ranger les variables aux bon endroits
        JDialog reponse = new JDialog();
        DefaultPieDataset pieDataset = new DefaultPieDataset();
        final DefaultCategoryDataset dataset = new DefaultCategoryDataset();
      String text=""; 
        String Infox ="";
        String Infoy ="";
        switch(action)
      {//////////////////:Pie charts//////////////////////////////////////
                case 1 : 
                        //set values
                        pieDataset.setValue("de 0 à 700", getEmployeParSalaire(1));
                        pieDataset.setValue("de 701 à 1000",getEmployeParSalaire(2));
                        pieDataset.setValue("de 1001 à 1300", getEmployeParSalaire(3));
                        pieDataset.setValue("Plus de 1300", getEmployeParSalaire(4));
                        text= "Nombre d'employés par tranche de salaire";
                        break;
              
                case 2 : 
                        //set values
                        pieDataset.setValue("REA", getEmployeParService(1));
                        pieDataset.setValue("CHG", getEmployeParService(2));
                        pieDataset.setValue("CAR", getEmployeParService(3));  
                        text= "Nombre d'employés par service";
                        break;
                case 3 : 
                        //set values
                        pieDataset.setValue("Anesthesiste", getEmployeParSpecialite(1));
                        pieDataset.setValue("Cardiologue", getEmployeParSpecialite(2));
                        pieDataset.setValue("Generaliste", getEmployeParSpecialite(3));
                        pieDataset.setValue("Orthopediste", getEmployeParSpecialite(4));
                        pieDataset.setValue("Pneumologue", getEmployeParSpecialite(5));
                        pieDataset.setValue("Radiologue", getEmployeParSpecialite(6));
                        pieDataset.setValue("Traumatologue", getEmployeParSpecialite(7));
                        text= "Nombre d'employés par spécialité";
                        break;
                case 4 : 
                        //set values
                        pieDataset.setValue("Jour", getEmployeRotation(1));
                        pieDataset.setValue("Nuit", getEmployeRotation(2));  
                        text= "Nombre d'employés par rotation";
                        break;
                    /// diagrammes en barre/////////////////////////////
                case 5 : 
                 //dataset.addValue(WIDTH, WIDTH, action);
                        pieDataset.setValue("Moyenne pour REA", new Integer(27));
                        pieDataset.setValue("Moyenne pour CHG", new Integer(10)); 
                        pieDataset.setValue("Moyenne pour CAR", new Integer(10));  
                        break;
                
                case 6 : 
                   //set values
/////noms
                        final String Anesthesiste = "Anesthesiste";        
                        final String Cardiologue = "Cardiologue";        
                        final String Generaliste = "Generaliste";    
                        final String Orthopediste = "Orthopediste";        
                        final String Pneumologue = "Pneumologue";        
                        final String Traumatologue = "Traumatologue";
                        final String salaire = "salaire";        
                        Infox = "specialité";
                        Infoy = "salaire";
                        text = "Moyenne des salaires des medecins par spécialité";
                    
/// init
                        dataset.addValue( 1.0 , salaire , Anesthesiste );        
                        dataset.addValue( 3.0 , salaire , Cardiologue );        
                        dataset.addValue( 5.0 , salaire , Generaliste ); 
                        dataset.addValue( 5.0 , salaire, Orthopediste );           
                        dataset.addValue( 5.0 , salaire, Pneumologue );        
                        dataset.addValue( 6.0 , salaire , Traumatologue );       
                           break;
                  ////////////////////                  
                     
                case 7 : 
                    //set values
                    final String salaires = "Salaire";        
                        final String doc = "Docteur";        
                        final String inf = "Infirmier";        
                        final String aut = "Autre";        
                        dataset.addValue( 1.0 , salaires , doc);        
                        dataset.addValue( 3.0 , salaires , inf );        
                        dataset.addValue( 5.0 , salaires ,  aut ); 
                        Infox= "Metier"; 
                        Infoy= "Salaire";
                        text = "Nombre de malade par service";
                  
                    break;
                case 8 :
                        //set values
                        final String malade = "Malade";        
                        final String rea = "REA";        
                        final String chg = "CHG";        
                        final String car = "CAR";        
                        dataset.addValue( 1.0 , malade , rea);        
                        dataset.addValue( 3.0 , malade , chg );        
                        dataset.addValue( 5.0 , malade ,  car ); 
                        Infox= "Service"; 
                        Infoy= "Nombre de malades";
                        text = "Nombre de malade par service";
                case 9 : 
                        //set values
                        final String MAAF = "MAAF";        
                        final String MNAM = "MNAM";        
                        final String LMDE = "LMDE";    
                        final String MNH = "MNH";        
                        final String MGEN = "MGEN";        
                        final String MMA = "MMA";
                        final String CNAMTS = "CNAMTS";        
                        final String CCVRP = "CCVRP";        
                        final String MAS = "MAS";    
                        final String AG2R = "AG2R";        
                        final String MNFTC = "MNFTC";        
                        final String MGSP = "MGSP";
                        final String salaire0 = "salaire";        
                        Infox = "Mutuelle";
                        Infoy = "Malades";
                        text = "Nombre de malades par mutuelle";
                    
//                      / init
                    
                        dataset.addValue( 1.0 , salaire0 , MAAF );        
                        dataset.addValue( 3.0 , salaire0 , MNAM );        
                        dataset.addValue( 5.0 , salaire0 , LMDE); 
                        dataset.addValue( 5.0 , salaire0, MNH );           
                        dataset.addValue( 5.0 , salaire0, MGEN );        
                        dataset.addValue( 6.0 , salaire0 , MMA ); 
                        dataset.addValue( 1.0 , salaire0 , CNAMTS );        
                        dataset.addValue( 3.0 , salaire0 , CCVRP );        
                        dataset.addValue( 5.0 , salaire0 , MAS ); 
                        dataset.addValue( 5.0 , salaire0, AG2R );           
                        dataset.addValue( 5.0 , salaire0, MNFTC );        
                        dataset.addValue( 6.0 , salaire0 , MGSP );       
                           break;
                    
                case 10 :
                        //set values
                        final String malades = "Chambre";        
                        final String reas = "REA";        
                        final String chgs = "CHG";        
                        final String cars = "CAR";        
                        dataset.addValue( 1.0 , malades , reas);        
                        dataset.addValue( 3.0 , malades , chgs );        
                        dataset.addValue( 5.0 , malades ,  cars ); 
                        Infox= "Service"; 
                        Infoy= "Nombre de chambre";
                        text = "Nombre de chambre par service";
                    break;
                default : 
                    break;
                    
                        
                 
              
              
            
      }
        // Piechart
        if(action>0&&action<5){
                final JFreeChart pieChart = ChartFactory.createPieChart(text, pieDataset, true, false, false);
                final ChartPanel cPanel = new ChartPanel(pieChart);
                reponse.add(cPanel);
                 reponse.pack();
                //panelHistogramme.pack();
                reponse.setVisible(true);
        }
        //Histogramme
         if(action>4&&action<11){
             
            final JFreeChart barChart = ChartFactory.createBarChart(text,Infox , Infoy ,dataset, PlotOrientation.VERTICAL, true, true, false);
            final ChartPanel cPanel = new ChartPanel(barChart);
               reponse.add(cPanel);
                 reponse.pack();
                //panelHistogramme.pack();
                reponse.setVisible(true);
         }
    
        
        
        /*
        DefaultPieDataset pieDataset = new DefaultPieDataset(); 
        pieDataset.setValue("Valeur1", new Integer(27)); 
        pieDataset.setValue("Valeur2", new Integer(10)); 
        pieDataset.setValue("Valeur3", new Integer(50)); 
        pieDataset.setValue("Valeur4", new Integer(5)); 
        JFreeChart pieChart = ChartFactory.createPieChart("Test camembert",pieDataset, true, true, true); 
        ChartPanel cPanel = new ChartPanel(pieChart); 
        panelHistogramme.add(cPanel); 
        */
        
    }//GEN-LAST:event_btnLancerStatActionPerformed

    //demande le nombre de salarié par tranche
    int getEmployeParSalaire(int tranche)
    {
        int value=0; 
        int min,max;
        //recuperation des bornes
            switch(tranche)
            {
                case 1: min=0;max=700;
                    break;
                case 2: min=701;max=1000;
                    break;
                case 3: min = 1001; max=1300;
                    break;
                case 4: min = 1300; max =200000;
            }
            //connexion
            
            
    return value;
    }
    //demande le nom d'employé par service
    int getEmployeParService(int num_service)
    {
    String service;
    int value=0; 
    //recuperation des donnee
        switch(num_service)
            {
                case 1: service="REA";
                    break;
                case 2: service="CHG";
                    break;
                case 3: service="CAR";
                    break;
        }
        return value;
    }
    //demande le nombre d'employés par spécialité
     int getEmployeParSpecialite(int num_spe)
    {
        String specialite="";
    int value=0; 
    switch(num_spe)
            {
                case 1: specialite="Cardiologue";
                    break;
                case 2: specialite="Generaliste";
                    break;
                case 3: specialite="Orthopediste";
                    break;
                case 4: specialite="Pneumologue";
                    break;
                case 5: specialite="Radiologue";
                    break;
                case 6: specialite="Traumatologue";
                  break;
            }
   
    
    return value;
    }
     //demande le d'employé par rotation
      int getEmployeRotation(int Day)
       {
        String Periode="";
    int value=0; 
    switch(Day)
            {
                case 1: Periode="JOUR";
                    break;
                case 2: Periode="NUIT";
                    break;
            }
    
    return value;
    }
    
    
    
    
    
    private void btnHistoriqueRequetesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHistoriqueRequetesActionPerformed
        // TODO add your handling code here:
        
        //ouvrir le fichier où sont rangé les requetes
        
        
    }//GEN-LAST:event_btnHistoriqueRequetesActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        
        if((jComboBox1.getSelectedIndex()!=0)||(jComboBox1.getSelectedIndex()!=-1)){
            action = jComboBox1.getSelectedIndex();
 
            
        }
                
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_reporting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_reporting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_reporting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_reporting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI_reporting().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHistoriqueRequetes;
    private javax.swing.JButton btnLancerStat;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel lblPopu;
    private javax.swing.JLabel lblReporting;
    private javax.swing.JPanel panelHistogramme;
    // End of variables declaration//GEN-END:variables
}
